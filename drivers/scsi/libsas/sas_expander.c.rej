***************
*** 849,854 ****
  
  	res = sas_discover_expander(child);
  	if (res) {
  		kfree(child);
  		return NULL;
  	}
--- 851,859 ----
  
  	res = sas_discover_expander(child);
  	if (res) {
+ 		spin_lock_irq(&parent->port->dev_list_lock);
+ 		list_del(&child->dev_list_node);
+ 		spin_unlock_irq(&parent->port->dev_list_lock);
  		kfree(child);
  		return NULL;
  	}
***************
*** 1718,1724 ****
  	list_for_each_entry(ch, &ex->children, siblings) {
  		if (ch->dev_type == EDGE_DEV || ch->dev_type == FANOUT_DEV) {
  			res = sas_find_bcast_dev(ch, src_dev);
- 			if (src_dev)
  				return res;
  		}
  	}
--- 1723,1729 ----
  	list_for_each_entry(ch, &ex->children, siblings) {
  		if (ch->dev_type == EDGE_DEV || ch->dev_type == FANOUT_DEV) {
  			res = sas_find_bcast_dev(ch, src_dev);
+ 			if (*src_dev)
  				return res;
  		}
  	}
***************
*** 1766,1775 ****
  		sas_disable_routing(parent, phy->attached_sas_addr);
  	}
  	memset(phy->attached_sas_addr, 0, SAS_ADDR_SIZE);
- 	sas_port_delete_phy(phy->port, phy->phy);
- 	if (phy->port->num_phys == 0)
- 		sas_port_delete(phy->port);
- 	phy->port = NULL;
  }
  
  static int sas_discover_bfs_by_root_level(struct domain_device *root,
--- 1771,1782 ----
  		sas_disable_routing(parent, phy->attached_sas_addr);
  	}
  	memset(phy->attached_sas_addr, 0, SAS_ADDR_SIZE);
+ 	if (phy->port) {
+ 		sas_port_delete_phy(phy->port, phy->phy);
+ 		if (phy->port->num_phys == 0)
+ 			sas_port_delete(phy->port);
+ 		phy->port = NULL;
+ 	}
  }
  
  static int sas_discover_bfs_by_root_level(struct domain_device *root,
