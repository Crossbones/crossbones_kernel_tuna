***************
*** 1490,1519 ****
  		return SCI_SUCCESS;
  
  	case SCI_REQ_SMP_WAIT_RESP: {
- 		struct sas_task *task = isci_request_access_task(ireq);
- 		struct scatterlist *sg = &task->smp_task.smp_resp;
- 		void *frame_header, *kaddr;
- 		u8 *rsp;
  
  		sci_unsolicited_frame_control_get_header(&ihost->uf_control,
- 							 frame_index,
- 							 &frame_header);
- 		kaddr = kmap_atomic(sg_page(sg), KM_IRQ0);
- 		rsp = kaddr + sg->offset;
- 		sci_swab32_cpy(rsp, frame_header, 1);
  
- 		if (rsp[0] == SMP_RESPONSE) {
  			void *smp_resp;
  
  			sci_unsolicited_frame_control_get_buffer(&ihost->uf_control,
- 								 frame_index,
- 								 &smp_resp);
  
- 			word_cnt = (sg->length/4)-1;
- 			if (word_cnt > 0)
- 				word_cnt = min_t(unsigned int, word_cnt,
- 						 SCU_UNSOLICITED_FRAME_BUFFER_SIZE/4);
- 			sci_swab32_cpy(rsp + 4, smp_resp, word_cnt);
  
  			ireq->scu_status = SCU_TASK_DONE_GOOD;
  			ireq->sci_status = SCI_SUCCESS;
--- 1482,1510 ----
  		return SCI_SUCCESS;
  
  	case SCI_REQ_SMP_WAIT_RESP: {
+ 		struct smp_resp *rsp_hdr = &ireq->smp.rsp;
+ 		void *frame_header;
  
  		sci_unsolicited_frame_control_get_header(&ihost->uf_control,
+ 							      frame_index,
+ 							      &frame_header);
+ 
+ 		/* byte swap the header. */
+ 		word_cnt = SMP_RESP_HDR_SZ / sizeof(u32);
+ 		sci_swab32_cpy(rsp_hdr, frame_header, word_cnt);
  
+ 		if (rsp_hdr->frame_type == SMP_RESPONSE) {
  			void *smp_resp;
  
  			sci_unsolicited_frame_control_get_buffer(&ihost->uf_control,
+ 								      frame_index,
+ 								      &smp_resp);
+ 
+ 			word_cnt = (sizeof(struct smp_resp) - SMP_RESP_HDR_SZ) /
+ 				sizeof(u32);
  
+ 			sci_swab32_cpy(((u8 *) rsp_hdr) + SMP_RESP_HDR_SZ,
+ 				       smp_resp, word_cnt);
  
  			ireq->scu_status = SCU_TASK_DONE_GOOD;
  			ireq->sci_status = SCI_SUCCESS;
***************
*** 1529,1541 ****
  				__func__,
  				ireq,
  				frame_index,
- 				rsp[0]);
  
  			ireq->scu_status = SCU_TASK_DONE_SMP_FRM_TYPE_ERR;
  			ireq->sci_status = SCI_FAILURE_CONTROLLER_SPECIFIC_IO_ERR;
  			sci_change_state(&ireq->sm, SCI_REQ_COMPLETED);
  		}
- 		kunmap_atomic(kaddr, KM_IRQ0);
  
  		sci_controller_release_frame(ihost, frame_index);
  
--- 1520,1531 ----
  				__func__,
  				ireq,
  				frame_index,
+ 				rsp_hdr->frame_type);
  
  			ireq->scu_status = SCU_TASK_DONE_SMP_FRM_TYPE_ERR;
  			ireq->sci_status = SCI_FAILURE_CONTROLLER_SPECIFIC_IO_ERR;
  			sci_change_state(&ireq->sm, SCI_REQ_COMPLETED);
  		}
  
  		sci_controller_release_frame(ihost, frame_index);
  
***************
*** 2603,2609 ****
  			status   = SAM_STAT_GOOD;
  			set_bit(IREQ_COMPLETE_IN_TARGET, &request->flags);
  
- 			if (completion_status == SCI_IO_SUCCESS_IO_DONE_EARLY) {
  
  				/* This was an SSP / STP / SATA transfer.
  				 * There is a possibility that less data than
--- 2599,2616 ----
  			status   = SAM_STAT_GOOD;
  			set_bit(IREQ_COMPLETE_IN_TARGET, &request->flags);
  
+ 			if (task->task_proto == SAS_PROTOCOL_SMP) {
+ 				void *rsp = &request->smp.rsp;
+ 
+ 				dev_dbg(&ihost->pdev->dev,
+ 					"%s: SMP protocol completion\n",
+ 					__func__);
+ 
+ 				sg_copy_from_buffer(
+ 					&task->smp_task.smp_resp, 1,
+ 					rsp, sizeof(struct smp_resp));
+ 			} else if (completion_status
+ 				   == SCI_IO_SUCCESS_IO_DONE_EARLY) {
  
  				/* This was an SSP / STP / SATA transfer.
  				 * There is a possibility that less data than
